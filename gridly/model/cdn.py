# coding: utf-8

"""
    Gridly API

    Gridly API documentation  # noqa: E501

    The version of the OpenAPI document: 5.9.0
    Contact: support@gridly.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from gridly import schemas  # noqa: F401


class CDN(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            id = schemas.StrSchema
            name = schemas.StrSchema
            description = schemas.StrSchema
            url = schemas.StrSchema
            gridId = schemas.StrSchema
            
            
            class status(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "readyToPublish": "READY_TO_PUBLISH",
                        "processing": "PROCESSING",
                        "published": "PUBLISHED",
                    }
                
                @schemas.classproperty
                def READY_TO_PUBLISH(cls):
                    return cls("readyToPublish")
                
                @schemas.classproperty
                def PROCESSING(cls):
                    return cls("processing")
                
                @schemas.classproperty
                def PUBLISHED(cls):
                    return cls("published")
            lastGeneratedTime = schemas.DateTimeSchema
            lastPublishedTime = schemas.DateTimeSchema
            
            
            class permission(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "public": "PUBLIC",
                        "private": "PRIVATE",
                    }
                
                @schemas.classproperty
                def PUBLIC(cls):
                    return cls("public")
                
                @schemas.classproperty
                def PRIVATE(cls):
                    return cls("private")
            type = schemas.StrSchema
            createdTime = schemas.DateTimeSchema
            lastModifiedTime = schemas.DateTimeSchema
            createdBy = schemas.StrSchema
            lastModifiedBy = schemas.StrSchema
            startTime = schemas.DateTimeSchema
            endTime = schemas.DateTimeSchema
            whiteListIP = schemas.StrSchema
            __annotations__ = {
                "id": id,
                "name": name,
                "description": description,
                "url": url,
                "gridId": gridId,
                "status": status,
                "lastGeneratedTime": lastGeneratedTime,
                "lastPublishedTime": lastPublishedTime,
                "permission": permission,
                "type": type,
                "createdTime": createdTime,
                "lastModifiedTime": lastModifiedTime,
                "createdBy": createdBy,
                "lastModifiedBy": lastModifiedBy,
                "startTime": startTime,
                "endTime": endTime,
                "whiteListIP": whiteListIP,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gridId"]) -> MetaOapg.properties.gridId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastGeneratedTime"]) -> MetaOapg.properties.lastGeneratedTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastPublishedTime"]) -> MetaOapg.properties.lastPublishedTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["permission"]) -> MetaOapg.properties.permission: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["type"]) -> MetaOapg.properties.type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdTime"]) -> MetaOapg.properties.createdTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastModifiedTime"]) -> MetaOapg.properties.lastModifiedTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdBy"]) -> MetaOapg.properties.createdBy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastModifiedBy"]) -> MetaOapg.properties.lastModifiedBy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startTime"]) -> MetaOapg.properties.startTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["endTime"]) -> MetaOapg.properties.endTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["whiteListIP"]) -> MetaOapg.properties.whiteListIP: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "name", "description", "url", "gridId", "status", "lastGeneratedTime", "lastPublishedTime", "permission", "type", "createdTime", "lastModifiedTime", "createdBy", "lastModifiedBy", "startTime", "endTime", "whiteListIP", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url"]) -> typing.Union[MetaOapg.properties.url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gridId"]) -> typing.Union[MetaOapg.properties.gridId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastGeneratedTime"]) -> typing.Union[MetaOapg.properties.lastGeneratedTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastPublishedTime"]) -> typing.Union[MetaOapg.properties.lastPublishedTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["permission"]) -> typing.Union[MetaOapg.properties.permission, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["type"]) -> typing.Union[MetaOapg.properties.type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdTime"]) -> typing.Union[MetaOapg.properties.createdTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastModifiedTime"]) -> typing.Union[MetaOapg.properties.lastModifiedTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdBy"]) -> typing.Union[MetaOapg.properties.createdBy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastModifiedBy"]) -> typing.Union[MetaOapg.properties.lastModifiedBy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startTime"]) -> typing.Union[MetaOapg.properties.startTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["endTime"]) -> typing.Union[MetaOapg.properties.endTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["whiteListIP"]) -> typing.Union[MetaOapg.properties.whiteListIP, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "name", "description", "url", "gridId", "status", "lastGeneratedTime", "lastPublishedTime", "permission", "type", "createdTime", "lastModifiedTime", "createdBy", "lastModifiedBy", "startTime", "endTime", "whiteListIP", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        url: typing.Union[MetaOapg.properties.url, str, schemas.Unset] = schemas.unset,
        gridId: typing.Union[MetaOapg.properties.gridId, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        lastGeneratedTime: typing.Union[MetaOapg.properties.lastGeneratedTime, str, datetime, schemas.Unset] = schemas.unset,
        lastPublishedTime: typing.Union[MetaOapg.properties.lastPublishedTime, str, datetime, schemas.Unset] = schemas.unset,
        permission: typing.Union[MetaOapg.properties.permission, str, schemas.Unset] = schemas.unset,
        type: typing.Union[MetaOapg.properties.type, str, schemas.Unset] = schemas.unset,
        createdTime: typing.Union[MetaOapg.properties.createdTime, str, datetime, schemas.Unset] = schemas.unset,
        lastModifiedTime: typing.Union[MetaOapg.properties.lastModifiedTime, str, datetime, schemas.Unset] = schemas.unset,
        createdBy: typing.Union[MetaOapg.properties.createdBy, str, schemas.Unset] = schemas.unset,
        lastModifiedBy: typing.Union[MetaOapg.properties.lastModifiedBy, str, schemas.Unset] = schemas.unset,
        startTime: typing.Union[MetaOapg.properties.startTime, str, datetime, schemas.Unset] = schemas.unset,
        endTime: typing.Union[MetaOapg.properties.endTime, str, datetime, schemas.Unset] = schemas.unset,
        whiteListIP: typing.Union[MetaOapg.properties.whiteListIP, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CDN':
        return super().__new__(
            cls,
            *args,
            id=id,
            name=name,
            description=description,
            url=url,
            gridId=gridId,
            status=status,
            lastGeneratedTime=lastGeneratedTime,
            lastPublishedTime=lastPublishedTime,
            permission=permission,
            type=type,
            createdTime=createdTime,
            lastModifiedTime=lastModifiedTime,
            createdBy=createdBy,
            lastModifiedBy=lastModifiedBy,
            startTime=startTime,
            endTime=endTime,
            whiteListIP=whiteListIP,
            _configuration=_configuration,
            **kwargs,
        )
